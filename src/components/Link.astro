---
interface Props {
  type?: "default" | "outline";
  href: string;
  target?: string;
}
const { href, target = "_self", type = "default" } = Astro.props;
---

<a
  href={href}
  target={target}
  rel={target === "_blank" ? "noopener noreferrer" : undefined}
  class={type}
>
  <slot />
</a>

<style lang="scss">
  a {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
    gap: 0.5rem;
    height: 2.75rem;
    padding-left: 2rem;
    padding-right: 2rem;
    font-size: 0.875rem;
    line-height: 1.25rem;
    font-weight: 500;
    white-space: nowrap;
    border-radius: var(--border-radius);
    cursor: pointer;
    appearance: button;
    background-image: none;
    text-transform: none;
    transition-property: color, background-color, border-color,
      text-decoration-color, fill, stroke;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 0.2s; // Default transition duration

    @media only screen and (min-width: 1280px) {
      padding-left: 1.5rem;
      padding-right: 1.5rem;
      height: 2.5rem;
    }

    @media only screen and (min-width: 1536px) {
      padding-left: 2rem;
      padding-right: 2rem;
      height: 2.75rem;
    }
  }

  a.default {
    border: none;
    color: hsl(220 13% 8%);
    background-color: rgba(255, 207, 134, 1);
    --tw-ring-offset-color: hsl(var(--background, 0 0% 100%));

    &:hover {
      background-color: rgb(255, 191, 95);
    }
  }

  a.outline {
    color: rgba(209, 183, 143, var(--tw-text-opacity, 1));
    border: 1px solid rgba(209, 183, 143, var(--tw-border-opacity, 1));
    background-color: var(--bg-color);
    transition-duration: 0.25s; // Override transition duration
    --tw-ring-offset-color: var(--bg-color);

    &:hover {
      background-color: rgba(56, 49, 39, 0.61);
    }
  }
</style>
